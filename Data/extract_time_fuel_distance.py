#!/usr/bin/env python3
"""
Extract time, fuel, and distance to climb performance data from climb.pdf.

Produces one CSV file:
- time_fuel_distance_to_climb.csv - Combined data for ISA-10, ISA, and ISA+10

Output columns: altitude_ft, oat_c, weight_lb, kias, time_min, fuel_us_gal, distance_nm
"""

import csv
from typing import List, Dict

# Time/Fuel/Distance to Climb Data - Extracted from PDF pages 35-46
# Format: (altitude, oat, weight, kias, time, fuel_gal, distance)
TIME_FUEL_DISTANCE_DATA = [
    # ISA-10 conditions - 6000 lb
    (0, 5, 6000, 186, 0, 0, 0),
    (2000, 1, 6000, 186, 1, 2, 2),
    (4000, -3, 6000, 186, 2, 4, 5),
    (6000, -7, 6000, 191, 3, 6, 7),
    (8000, -11, 6000, 186, 3, 8, 10),
    (10000, -15, 6000, 180, 4, 9, 13),
    (12000, -19, 6000, 175, 6, 11, 16),
    (14000, -23, 6000, 171, 7, 13, 19),
    (16000, -27, 6000, 164, 8, 15, 23),
    (18000, -31, 6000, 161, 9, 17, 27),
    (20000, -35, 6000, 157, 11, 19, 32),
    (22000, -39, 6000, 153, 12, 21, 37),
    (24000, -43, 6000, 151, 14, 23, 42),
    (26000, -47, 6000, 148, 16, 26, 48),
    (28000, -50, 6000, 144, 18, 28, 55),
    (30000, -54, 6000, 141, 20, 30, 64),
    (31000, -56, 6000, 140, 22, 32, 69),

    # ISA-10 conditions - 5500 lb
    (0, 5, 5500, 186, 0, 0, 0),
    (2000, 1, 5500, 186, 1, 2, 2),
    (4000, -3, 5500, 185, 2, 3, 4),
    (6000, -7, 5500, 190, 2, 5, 6),
    (8000, -11, 5500, 185, 3, 7, 9),
    (10000, -15, 5500, 179, 4, 8, 11),
    (12000, -19, 5500, 174, 5, 10, 14),
    (14000, -23, 5500, 170, 6, 12, 17),
    (16000, -27, 5500, 162, 7, 14, 21),
    (18000, -31, 5500, 160, 8, 15, 24),
    (20000, -35, 5500, 155, 9, 17, 28),
    (22000, -39, 5500, 152, 11, 19, 32),
    (24000, -43, 5500, 150, 12, 21, 37),
    (26000, -47, 5500, 147, 14, 22, 42),
    (28000, -50, 5500, 143, 15, 24, 48),
    (30000, -54, 5500, 140, 17, 26, 55),
    (31000, -56, 5500, 139, 18, 27, 59),

    # ISA-10 conditions - 5000 lb
    (0, 5, 5000, 185, 0, 0, 0),
    (2000, 1, 5000, 185, 1, 2, 2),
    (4000, -3, 5000, 185, 1, 3, 4),
    (6000, -7, 5000, 189, 2, 5, 6),
    (8000, -11, 5000, 183, 3, 6, 8),
    (10000, -15, 5000, 178, 4, 7, 10),
    (12000, -19, 5000, 173, 4, 9, 12),
    (14000, -23, 5000, 168, 5, 10, 15),
    (16000, -27, 5000, 161, 6, 12, 18),
    (18000, -31, 5000, 159, 7, 13, 21),
    (20000, -35, 5000, 154, 8, 15, 25),
    (22000, -39, 5000, 151, 9, 16, 28),
    (24000, -43, 5000, 149, 10, 18, 32),
    (26000, -47, 5000, 146, 12, 19, 36),
    (28000, -50, 5000, 142, 13, 21, 41),
    (30000, -54, 5000, 139, 15, 23, 47),
    (31000, -56, 5000, 138, 16, 23, 50),

    # ISA-10 conditions - 4500 lb
    (0, 5, 4500, 184, 0, 0, 0),
    (2000, 1, 4500, 184, 1, 1, 2),
    (4000, -3, 4500, 184, 1, 3, 3),
    (6000, -7, 4500, 189, 2, 4, 5),
    (8000, -11, 4500, 183, 2, 5, 7),
    (10000, -15, 4500, 177, 3, 7, 9),
    (12000, -19, 4500, 172, 4, 8, 11),
    (14000, -23, 4500, 167, 5, 9, 13),
    (16000, -27, 4500, 161, 5, 10, 16),
    (18000, -31, 4500, 158, 6, 12, 19),
    (20000, -35, 4500, 153, 7, 13, 21),
    (22000, -39, 4500, 150, 8, 14, 24),
    (24000, -43, 4500, 148, 9, 16, 28),
    (26000, -47, 4500, 145, 10, 17, 31),
    (28000, -50, 4500, 141, 11, 18, 36),
    (30000, -54, 4500, 138, 13, 19, 40),
    (31000, -56, 4500, 136, 13, 20, 43),

    # ISA conditions - 6000 lb
    (0, 15, 6000, 177, 0, 0, 0),
    (2000, 11, 6000, 173, 1, 2, 3),
    (4000, 7, 6000, 174, 2, 4, 6),
    (6000, 3, 6000, 175, 3, 6, 8),
    (8000, -1, 6000, 173, 4, 9, 11),
    (10000, -5, 6000, 169, 5, 11, 14),
    (12000, -9, 6000, 165, 7, 13, 18),
    (14000, -13, 6000, 159, 8, 15, 22),
    (16000, -17, 6000, 159, 9, 17, 25),
    (18000, -21, 6000, 157, 11, 19, 30),
    (20000, -25, 6000, 152, 12, 21, 34),
    (22000, -29, 6000, 153, 14, 23, 39),
    (24000, -33, 6000, 151, 15, 25, 45),
    (26000, -37, 6000, 147, 17, 28, 51),
    (28000, -40, 6000, 144, 19, 30, 58),
    (30000, -44, 6000, 140, 22, 33, 67),
    (31000, -46, 6000, 139, 23, 34, 73),

    # ISA conditions - 5500 lb
    (0, 15, 5500, 177, 0, 0, 0),
    (2000, 11, 5500, 172, 1, 2, 2),
    (4000, 7, 5500, 173, 2, 4, 5),
    (6000, 3, 5500, 175, 3, 6, 7),
    (8000, -1, 5500, 173, 4, 8, 10),
    (10000, -5, 5500, 168, 5, 9, 13),
    (12000, -9, 5500, 164, 6, 11, 16),
    (14000, -13, 5500, 158, 7, 13, 19),
    (16000, -17, 5500, 158, 8, 15, 22),
    (18000, -21, 5500, 156, 9, 17, 26),
    (20000, -25, 5500, 152, 11, 19, 30),
    (22000, -29, 5500, 152, 12, 20, 34),
    (24000, -33, 5500, 150, 13, 22, 39),
    (26000, -37, 5500, 146, 15, 24, 44),
    (28000, -40, 5500, 142, 17, 26, 50),
    (30000, -44, 5500, 139, 19, 28, 58),
    (31000, -46, 5500, 138, 20, 29, 62),

    # ISA conditions - 5000 lb
    (0, 15, 5000, 176, 0, 0, 0),
    (2000, 11, 5000, 171, 1, 2, 2),
    (4000, 7, 5000, 172, 2, 3, 4),
    (6000, 3, 5000, 174, 3, 5, 7),
    (8000, -1, 5000, 172, 3, 7, 9),
    (10000, -5, 5000, 166, 4, 8, 11),
    (12000, -9, 5000, 163, 5, 10, 14),
    (14000, -13, 5000, 157, 6, 11, 17),
    (16000, -17, 5000, 157, 7, 13, 20),
    (18000, -21, 5000, 155, 8, 15, 23),
    (20000, -25, 5000, 150, 9, 16, 26),
    (22000, -29, 5000, 151, 10, 18, 30),
    (24000, -33, 5000, 149, 12, 19, 34),
    (26000, -37, 5000, 145, 13, 21, 38),
    (28000, -40, 5000, 141, 14, 23, 43),
    (30000, -44, 5000, 138, 16, 24, 49),
    (31000, -46, 5000, 136, 17, 25, 53),

    # ISA conditions - 4500 lb
    (0, 15, 4500, 175, 0, 0, 0),
    (2000, 11, 4500, 171, 1, 2, 2),
    (4000, 7, 4500, 172, 1, 3, 4),
    (6000, 3, 4500, 173, 2, 4, 6),
    (8000, -1, 4500, 171, 3, 6, 8),
    (10000, -5, 4500, 165, 4, 7, 10),
    (12000, -9, 4500, 162, 4, 9, 12),
    (14000, -13, 4500, 156, 5, 10, 15),
    (16000, -17, 4500, 156, 6, 11, 17),
    (18000, -21, 4500, 153, 7, 13, 20),
    (20000, -25, 4500, 150, 8, 14, 23),
    (22000, -29, 4500, 150, 9, 15, 26),
    (24000, -33, 4500, 147, 10, 17, 29),
    (26000, -37, 4500, 144, 11, 18, 33),
    (28000, -40, 4500, 140, 12, 19, 37),
    (30000, -44, 4500, 137, 14, 21, 42),
    (31000, -46, 4500, 135, 14, 22, 45),

    # ISA+10 conditions - 6000 lb
    (0, 25, 6000, 165, 0, 0, 0),
    (2000, 21, 6000, 162, 1, 3, 4),
    (4000, 17, 6000, 162, 3, 5, 7),
    (6000, 13, 6000, 164, 4, 8, 11),
    (8000, 9, 6000, 160, 6, 10, 14),
    (10000, 5, 6000, 156, 7, 13, 19),
    (12000, 1, 6000, 153, 9, 15, 23),
    (14000, -3, 6000, 150, 11, 18, 28),
    (16000, -7, 6000, 147, 12, 20, 33),
    (18000, -11, 6000, 144, 14, 23, 38),
    (20000, -15, 6000, 144, 16, 25, 44),
    (22000, -19, 6000, 141, 19, 28, 51),
    (24000, -23, 6000, 139, 21, 31, 59),
    (26000, -27, 6000, 135, 24, 34, 67),
    (28000, -30, 6000, 135, 27, 37, 76),
    (30000, -34, 6000, 130, 30, 40, 87),
    (31000, -36, 6000, 131, 32, 42, 93),

    # ISA+10 conditions - 5500 lb
    (0, 25, 5500, 164, 0, 0, 0),
    (2000, 21, 5500, 161, 2, 2, 3),
    (4000, 17, 5500, 161, 3, 5, 6),
    (6000, 13, 5500, 163, 4, 7, 9),
    (8000, 9, 5500, 159, 5, 9, 13),
    (10000, 5, 5500, 155, 6, 11, 16),
    (12000, 1, 5500, 152, 8, 13, 20),
    (14000, -3, 5500, 149, 9, 15, 24),
    (16000, -7, 5500, 146, 11, 18, 29),
    (18000, -11, 5500, 143, 12, 20, 33),
    (20000, -15, 5500, 143, 14, 22, 38),
    (22000, -19, 5500, 140, 16, 24, 44),
    (24000, -23, 5500, 137, 18, 26, 50),
    (26000, -27, 5500, 134, 20, 29, 57),
    (28000, -30, 5500, 133, 22, 31, 64),
    (30000, -34, 5500, 128, 25, 33, 72),
    (31000, -36, 5500, 131, 26, 35, 77),

    # ISA+10 conditions - 5000 lb
    (0, 25, 5000, 163, 0, 0, 0),
    (2000, 21, 5000, 160, 1, 2, 3),
    (4000, 17, 5000, 160, 2, 4, 5),
    (6000, 13, 5000, 162, 3, 6, 8),
    (8000, 9, 5000, 158, 4, 8, 11),
    (10000, 5, 5000, 153, 5, 10, 14),
    (12000, 1, 5000, 151, 7, 11, 17),
    (14000, -3, 5000, 148, 8, 13, 21),
    (16000, -7, 5000, 145, 9, 15, 25),
    (18000, -11, 5000, 142, 11, 17, 29),
    (20000, -15, 5000, 141, 12, 19, 33),
    (22000, -19, 5000, 139, 14, 21, 38),
    (24000, -23, 5000, 136, 15, 23, 43),
    (26000, -27, 5000, 133, 17, 24, 48),
    (28000, -30, 5000, 132, 19, 26, 54),
    (30000, -34, 5000, 127, 21, 28, 61),
    (31000, -36, 5000, 130, 22, 29, 64),

    # ISA+10 conditions - 4500 lb
    (0, 25, 4500, 162, 0, 0, 0),
    (2000, 21, 4500, 159, 1, 2, 2),
    (4000, 17, 4500, 159, 2, 4, 5),
    (6000, 13, 4500, 161, 3, 5, 7),
    (8000, 9, 4500, 157, 4, 7, 10),
    (10000, 5, 4500, 152, 5, 8, 12),
    (12000, 1, 4500, 149, 6, 10, 15),
    (14000, -3, 4500, 147, 7, 12, 18),
    (16000, -7, 4500, 144, 8, 13, 21),
    (18000, -11, 4500, 141, 9, 15, 25),
    (20000, -15, 4500, 139, 10, 16, 28),
    (22000, -19, 4500, 138, 12, 18, 32),
    (24000, -23, 4500, 134, 13, 19, 36),
    (26000, -27, 4500, 132, 14, 21, 41),
    (28000, -30, 4500, 131, 16, 22, 45),
    (30000, -34, 4500, 125, 17, 24, 51),
    (31000, -36, 4500, 130, 18, 25, 54),
]


def write_csv(filename: str, data: List[tuple], headers: List[str]):
    """Write data to CSV file."""
    with open(filename, 'w', newline='') as f:
        writer = csv.writer(f)
        writer.writerow(headers)
        writer.writerows(data)
    print(f"✓ Created {filename} with {len(data)} rows")


def main():
    """Extract time/fuel/distance to climb data and create CSV file."""
    headers = ['altitude_ft', 'oat_c', 'weight_lb', 'kias', 'time_min', 'fuel_us_gal', 'distance_nm']

    # Write combined time/fuel/distance data
    write_csv('time_fuel_distance_to_climb.csv', TIME_FUEL_DISTANCE_DATA, headers)

    print(f"\n✓ Successfully extracted time/fuel/distance to climb data")
    print(f"  - Total entries: {len(TIME_FUEL_DISTANCE_DATA)}")
    print(f"  - ISA conditions: ISA-10, ISA, ISA+10")
    print(f"  - Weights: 4500, 5000, 5500, 6000 lb")
    print(f"  - Altitudes: 0-31,000 ft")


if __name__ == '__main__':
    main()
